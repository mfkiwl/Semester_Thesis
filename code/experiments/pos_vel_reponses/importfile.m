function [timestamp, posRef_x, posS_x, velRef_x, velS_x] = importfile(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [TIMESTAMP, POSREF_X, POSS_X, VELREF_X, VELS_X] =
%  IMPORTFILE(FILENAME) reads data from text file FILENAME for the
%  default selection.  Returns the data as column vectors.
%
%  [TIMESTAMP, POSREF_X, POSS_X, VELREF_X, VELS_X] = IMPORTFILE(FILE,
%  DATALINES) reads data for the specified row interval(s) of text file
%  FILENAME. Specify DATALINES as a positive scalar integer or a N-by-2
%  array of positive scalar integers for dis-contiguous row intervals.
%
%  Example:
%  [timestamp, posRef_x, posS_x, velRef_x, velS_x] = importfile("/home/evgheniivolodscoi/LRZ Sync+Share/TUM/Master_AS_RCI/Semester_3/Semesterarbeit/code/experiments/pos_vel_reponses/exp_1_pos_vel.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 25-Mar-2020 00:13:26

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Setup the Import Options
opts = delimitedTextImportOptions("NumVariables", 5);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["timestamp", "posRef_x", "posS_x", "velRef_x", "velS_x"];
opts.VariableTypes = ["double", "double", "double", "double", "double"];
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
timestamp = tbl.timestamp;
posRef_x = tbl.posRef_x;
posS_x = tbl.posS_x;
velRef_x = tbl.velRef_x;
velS_x = tbl.velS_x;
end